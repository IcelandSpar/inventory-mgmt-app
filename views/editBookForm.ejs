<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles.css">
    <link rel="icon" href="/books.png" type="image/x-icon"/>
    <title>Edit Book</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Libre+Franklin:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    
</head>
<body>
    <%- include('partials/navbar.ejs') %>
    <img class="bookIconPng" src="/book-icon.png" alt="Book Icon" width="300px" height="300px">
    <img class="controllerIconPng" src="/controller-icon.png" alt="Game Controller Icon" width="300px" height="300px">

    <main class="createFormMainContainer">
        <%- include('partials/errors') %>
        <form action="/editBook/<%= locals.data[0].id %>" method="POST" class="add-book-form">
            <fieldset class="createFieldSet add-bookFieldSet">
                <legend class="selectItemLegend">Edit your book details!</legend>
                <div class="textAuthPubQuantCont">
                    <div class="addBookLabelAndInputCont">
                        <label for="title">Title: </label>
                        <input type="text" id="title" name="title" value="<%= locals.data[0].title %>" required>
                    </div>
                    <div class="addBookLabelAndInputCont">
                        <label for="author">Author: </label>
                        <input type="text" id="author" name="author" value="<%= locals.data[0].author %>" required>
                    </div>
                    <div class="addBookLabelAndInputCont">
                        <label for="publisher">Publisher: </label>
                        <input type="text" id="publisher" name="publisher" value="<%= locals.data[0].publisher %>" required>
                    </div>
                    <div class="addBookLabelAndInputCont">
                        <label for="quantity">Quantity: </label>
                        <input type="tel" id="quantity" name="quantity" value="<%= locals.data[0].quantity %>" required>
                    </div>
                </div>
                <div class="addBookLabelAndInputCont">
                    <label for="description">Description: </label>
                    <textarea name="description" id="description" class="add-book-description-textarea"><%= locals.data[0].description %></textarea>
                </div>
            </fieldset>
            <% const removeBtnHandle = (e) => {  %>
            <%  e.preventDefault(); %>
            <%  document.querySelector(`.wrapper-${(Array.from(removeBtn.classList)[0]).slice(10)}`).remove();  %>
          <%  };  %>
            <fieldset  class="createFieldSet">
                <legend class="selectItemLegend">Add book genres below!</legend>
                <div class="addBookLabelAndInputCont">
                    <label for="genres">Genres: </label>
                    <div class="genreCont">
                    </div>
                    <button class="addGenreBtn">Add Genre</button>
                    <script>

                        let genreData = '<%- JSON.stringify(locals.data[0].genre_type)  %>';
                        let parsedGenreData = JSON.parse(genreData);
                        console.log(parsedGenreData)
                        let inputNumber = 0;



                        const genreCont = document.querySelector('.genreCont');
                        const addGenreBtn = document.querySelector('.addGenreBtn');
                        addGenreBtn.setAttribute('class', 'addGenreBtn');

                        const populateGenre = () => {
                            parsedGenreData.forEach((arrItem) => {
                                const wrapperDiv = document.createElement('div');
                            const newEl = document.createElement('input');
                            const removeBtn = document.createElement('button');
                            const removeInputImg = document.createElement('img');

                            wrapperDiv.setAttribute('class', `wrapper-${inputNumber} genreWrapperDiv`)

                            newEl.setAttribute('class', `input-number-${inputNumber} inputGenre`)
                            newEl.setAttribute('required', '');
                            newEl.setAttribute('oninvalid', 'this.setCustomValidity("Please fill out this field, or remove input with trash icon.")');
                            newEl.setAttribute('oninput', 'this.setCustomValidity("")');
                            newEl.setAttribute('name', 'genre_type');
                            newEl.setAttribute('value', arrItem)

                            
                            removeBtn.setAttribute('class', `removeBtn-${inputNumber} removeGenreBtn`)
                            
                            removeInputImg.setAttribute('src', '/deleteGoogleIcon.svg')
                            removeInputImg.setAttribute('alt', 'Delete Input icon');
                            removeInputImg.setAttribute('class', 'removeGenreBtnImg')


                            removeBtn.addEventListener('click', (e) => {
                                e.preventDefault();
                                
                                document.querySelector(`.wrapper-${(Array.from(removeBtn.classList)[0]).slice(10)}`).remove();
                            })
                            
                            genreCont.appendChild(wrapperDiv)
                            wrapperDiv.appendChild(newEl)
                            wrapperDiv.appendChild(removeBtn)
                            removeBtn.appendChild(removeInputImg);
                            inputNumber++
                            });
                        }





                        addGenreBtn.addEventListener('click', (e) => {

                            e.preventDefault()
                            const wrapperDiv = document.createElement('div');
                            const newEl = document.createElement('input');
                            const removeBtn = document.createElement('button');
                            const removeInputImg = document.createElement('img');

                            wrapperDiv.setAttribute('class', `wrapper-${inputNumber} genreWrapperDiv`)

                            newEl.setAttribute('class', `input-number-${inputNumber} inputGenre`)
                            newEl.setAttribute('required', '');
                            newEl.setAttribute('oninvalid', 'this.setCustomValidity("Please fill out this field, or remove input with trash icon.")');
                            newEl.setAttribute('oninput', 'this.setCustomValidity("")');
                            newEl.setAttribute('name', 'genre_type')

                            
                            removeBtn.setAttribute('class', `removeBtn-${inputNumber} removeGenreBtn`)
                            
                            removeInputImg.setAttribute('src', '/deleteGoogleIcon.svg')
                            removeInputImg.setAttribute('alt', 'Delete Input icon');
                            removeInputImg.setAttribute('class', 'removeGenreBtnImg')


                            removeBtn.addEventListener('click', (e) => {
                                e.preventDefault();
                                
                                document.querySelector(`.wrapper-${(Array.from(removeBtn.classList)[0]).slice(10)}`).remove();
                            })
                            
                            genreCont.appendChild(wrapperDiv)
                            wrapperDiv.appendChild(newEl)
                            wrapperDiv.appendChild(removeBtn)
                            removeBtn.appendChild(removeInputImg);
                            inputNumber++
                        })

                        if(parsedGenreData[0] == null) {
                            const createGenreInputEvent = new Event('click');
                            addGenreBtn.dispatchEvent(createGenreInputEvent);
                        } else if(parsedGenreData) {
                            populateGenre();
                            
                        }
                        

                    </script>
                </div>
            </fieldset>
            <fieldset class="createFieldSet">
                <legend class="selectItemLegend">Choose a cover for the book!</legend>
                <div class="addBookLabelAndInputCont addImageUrlCont">
                    <label for="imageUrl">Image URL: </label>
                    <input type="url" id="imageUrl" name="imageUrl" value="<%= locals.data[0].cover_image_url %>"> 
                </div>
            </fieldset>
            <div class="addBookBtnCont"><button type="submit" class="addBookBtn orangeBtn">Update Book</button></div>
        </form>
    </main>
</body>
</html>